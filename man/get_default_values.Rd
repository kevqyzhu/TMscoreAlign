% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformation_matrix.R
\name{get_default_values}
\alias{get_default_values}
\title{Get Default Values for Structure Alignment Parameters}
\usage{
get_default_values(coord1, coord2)
}
\arguments{
\item{coord1}{Matrix. 3D coordinates of the first structure's atoms
(rows: dimensions, columns: atoms). This parameter should be a 4xN matrix,
where N is the number of atoms. The matrix is structured such that each
column corresponds to the 3D coordinates of an alpha-carbon atom in the
first structure, and each row represents a dimension (x, y, z, and a
placeholder coordinate). The placeholder coordinate is set to 1 for each
atom, facilitating matrix transformations.}

\item{coord2}{Matrix. 3D coordinates of the second structure's atoms
(rows: dimensions, columns: atoms). This parameter should be a 4xN matrix,
where N is the number of atoms. The matrix is structured such that each
column corresponds to the 3D coordinates of an alpha-carbon atom in the
second structure, and each row represents a dimension (x, y, z, and a
placeholder coordinate). The placeholder coordinate is set to 1 for each
atom, facilitating matrix transformations.}
}
\value{
A numeric vector containing default values for the structure
  alignment parameters:\cr
  - dx: Translation along the x-axis.\cr
  - dy: Translation along the y-axis.\cr
  - dz: Translation along the z-axis.\cr
  - theta: Rotation angle around the x-axis.\cr
  - phi: Rotation angle around the y-axis.\cr
  - psi: Rotation angle around the z-axis.
}
\description{
This function calculates default values for the parameters used in structure
alignment. The parameters include translation along x, y, z axes
(dx, dy, dz), and rotation angles (theta, phi, psi) based on the given 3D
coordinates of two structures.
}
\examples{
\dontrun{
# Example: Get default values for structure alignment parameters
pdb_file1 <- system.file("extdata", "1LNIA_decoy1_4.pdb",
                          package="TMscoreAlign"
                          )
pdb_file2 <- system.file("extdata", "1LNIA_decoy2_180.pdb",
                          package="TMscoreAlign"
                          )
alignment_results <- get_alignment(pdb_file1, pdb_file2,
                                  chain1 = 'A', chain2 = 'A',
                                  method = "alignment", optimize = FALSE
                                  )
coord1 <- alignment_results$coord1
coord2 <- alignment_results$coord2
default_values <- get_default_values(coord1, coord2)
}

}
\references{
Borchers H (2022). pracma: Practical Numerical Math Functions. R package
version 2.4.2, \href{https://CRAN.R-project.org/package=pracma}{Link}.

Jur van den Berg
(https://math.stackexchange.com/users/91768/jur-van-den-berg),
Calculate Rotation Matrix to align Vector $A$ to Vector $B$ in $3D$?,
URL (version: 2016-09-01):
\href{https://math.stackexchange.com/q/476311}{Link}
}
